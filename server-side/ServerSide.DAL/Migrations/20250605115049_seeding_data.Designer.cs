// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerSide.DAL.Context;

#nullable disable

namespace ServerSide.DAL.Migrations
{
    [DbContext(typeof(GAMADBContext))]
    [Migration("20250605115049_seeding_data")]
    partial class seeding_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Cart", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000001"),
                            Description = "Immersive role-playing games with deep stories and character development.",
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Description = "Exciting games combining action sequences with exploration and puzzle-solving.",
                            Name = "Action-Adventure"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Description = "Games blending fast-paced action combat with role-playing game elements.",
                            Name = "Action RPG"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000004"),
                            Description = "Vast open worlds filled with action, exploration, and freedom.",
                            Name = "Open-World, Action"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000005"),
                            Description = "First-person shooter games focusing on gun-based combat.",
                            Name = "FPS"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000006"),
                            Description = "Games that combine terrifying horror elements with action gameplay.",
                            Name = "Horror, Action"
                        },
                        new
                        {
                            Id = new Guid("c0000001-0000-0000-0000-000000000007"),
                            Description = "Narrative-driven games focused on exploration and puzzle-solving.",
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Library", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000001"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785148/The_Witcher_3__Wild_Hunt_veizjq.webp"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000002"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785143/Red_Dead_Redemption_2_ajzbne.webp"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000003"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000003"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785135/Cyberpunk_2077_mpcrn7.webp"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000004"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000004"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785143/Elden_Ring_z76bf2.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000005"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000005"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785134/God_of_War_2018_bqgg9r.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000006"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000006"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785138/Grand_Theft_Auto_V_pc1m1w.png"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000007"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000007"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785134/Assassin_s_Creed_Valhalla_nmbjgk.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000008"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000008"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785136/Call_of_Duty_Modern_Warfare_II_-_Copy_oxel4a.webp"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000009"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000009"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785134/Battlefield_2042_-_Copy_mfd3z3.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000010"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000010"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785148/Resident_Evil_Village_jyj7c1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000011"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000011"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785139/Halo_Infinite_xc86o8.png"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000012"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000012"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785146/Dark_Souls_III_ddwqhw.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000013"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000013"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785143/Death_Stranding_epmymd.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000014"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000014"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785140/Horizon_Forbidden_West_r9dxp6.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000015"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000015"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785138/Marvel_s_Spider-Man_hu3pi4.webp"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000016"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000016"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785146/Sekiro_Shadows_Die_Twice_f5gpjv.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000017"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000017"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785144/Star_Wars_Jedi_Survivor_jurhq6.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000018"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000018"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785144/The_Last_of_Us_Part_II_zifqwd.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000019"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000019"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785140/Doom_Eternal_cifdng.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0000000-0000-0000-0000-000000000020"),
                            ProductId = new Guid("a0000000-0000-0000-0000-000000000020"),
                            Url = "https://res.cloudinary.com/dtcyvj8q6/image/upload/v1748785140/Monster_Hunter_World_acr9c5.jpg"
                        });
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000001"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000001"),
                            Company = "CD Projekt Red",
                            Description = "A story-driven open-world RPG set in a visually stunning fantasy universe full of meaningful choices and impactful consequences.",
                            Discount = 0m,
                            FinalPrice = 39.99m,
                            Name = "The Witcher 3: Wild Hunt",
                            OriginalPrice = 39.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/uqtFg2C2v_0?si=TeCSyxNtpSwpW3OG"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000002"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Company = "Rockstar Games",
                            Description = "An epic tale of life in America’s unforgiving heartland, with an immersive open-world experience and stunning storytelling.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "Red Dead Redemption 2",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/eaW0tYpxyp0?si=fR3PIiSDuBNYnmAb"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000003"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "CD Projekt Red",
                            Description = "A futuristic open-world RPG set in Night City, where you play as a mercenary outlaw seeking a unique implant granting immortality.",
                            Discount = 0m,
                            FinalPrice = 49.99m,
                            Name = "Cyberpunk 2077",
                            OriginalPrice = 49.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/8X2kIfS6fb8?si=Jws9zAr7BK4Z4c8C"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000004"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "FromSoftware",
                            Description = "An expansive fantasy action RPG with rich lore, open-world exploration, and challenging combat mechanics.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "Elden Ring",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/K_03kFqWfqs?si=9QifFRcb_8GsrF1d"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000005"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Company = "Santa Monica Studio",
                            Description = "Follow Kratos and his son, Atreus, on a journey through Norse mythology in a breathtaking and emotional adventure.",
                            Discount = 0m,
                            FinalPrice = 49.99m,
                            Name = "God of War (2018)",
                            OriginalPrice = 49.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/K0u_kAWLJOA?si=kErVde8OKkV87IVY"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000006"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000004"),
                            Company = "Rockstar Games",
                            Description = "A vast open world of crime, heists, and exploration, following three protagonists in Los Santos.",
                            Discount = 0m,
                            FinalPrice = 29.99m,
                            Name = "Grand Theft Auto V",
                            OriginalPrice = 29.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/QkkoHAzjnUs?si=dAf546sunfutA0Wd"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000007"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "Ubisoft",
                            Description = "Play as a Viking raider exploring and conquering Anglo-Saxon England.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "Assassin’s Creed Valhalla",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/ssrNcwxALS4?si=nXuA34zE-32jKyyW"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000008"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000005"),
                            Company = "Activision",
                            Description = "A high-action military shooter with a cinematic campaign and thrilling multiplayer.",
                            Discount = 0m,
                            FinalPrice = 69.99m,
                            Name = "Call of Duty: Modern Warfare II",
                            OriginalPrice = 69.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/ztjfwecrY8E?si=-jgRpUqwxSG_Nbmo"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000009"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000005"),
                            Company = "Electronic Arts",
                            Description = "A large-scale military shooter set in the near future with massive multiplayer battles.",
                            Discount = 0m,
                            FinalPrice = 49.99m,
                            Name = "Battlefield 2042",
                            OriginalPrice = 49.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/ASzOzrB-a9E?si=F2e6ZgqP28TVlj81"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000010"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000006"),
                            Company = "Capcom",
                            Description = "A terrifying and immersive survival horror experience set in a mysterious village.",
                            Discount = 0m,
                            FinalPrice = 39.99m,
                            Name = "Resident Evil Village",
                            OriginalPrice = 39.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2021, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/tjfTxFzGh3Q?si=IfWAOWUcWbnvu8ih"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000011"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000005"),
                            Company = "343 Industries",
                            Description = "The latest chapter in the Halo franchise featuring an open-world campaign and multiplayer battles.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "Halo Infinite",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/rFh2i4AlPD4?si=HrtzxEY5oeLryzx1"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000012"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "FromSoftware",
                            Description = "A dark and atmospheric action RPG with challenging gameplay and deep lore.",
                            Discount = 0m,
                            FinalPrice = 49.99m,
                            Name = "Dark Souls III",
                            OriginalPrice = 49.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2016, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/_zDZYrIUgKE?si=6d6Bh6a17ZkowNgH"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000013"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000007"),
                            Company = "Kojima Productions",
                            Description = "A unique open-world experience about connecting a fractured society through delivery missions.",
                            Discount = 0m,
                            FinalPrice = 39.99m,
                            Name = "Death Stranding",
                            OriginalPrice = 39.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2019, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/Mpn-MC2B6Zc?si=MIci5C_lhy5mrBEY"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000014"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "Guerrilla Games",
                            Description = "Explore a post-apocalyptic world filled with robotic creatures and uncover ancient secrets.",
                            Discount = 0m,
                            FinalPrice = 69.99m,
                            Name = "Horizon Forbidden West",
                            OriginalPrice = 69.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2022, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/XLZN63UxAOM?si=DAwFG2SjXJ6C6idp"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000015"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Company = "Insomniac Games",
                            Description = "Swing through New York City as Spider-Man in a cinematic and action-packed story.",
                            Discount = 0m,
                            FinalPrice = 49.99m,
                            Name = "Marvel’s Spider-Man",
                            OriginalPrice = 49.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2018, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/3R2uvJqWeVg?si=QJ0sDGcFdCg4Lmqd"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000016"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "FromSoftware",
                            Description = "A fast-paced samurai action game with deep combat mechanics and a gripping story.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "Sekiro: Shadows Die Twice",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/rXMX4YJ7Lks?si=sFB-MIVCG1laKJ82"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000017"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Company = "Respawn Entertainment",
                            Description = "A Star Wars action RPG where you play as a Jedi surviving in a post-Order 66 world.",
                            Discount = 0m,
                            FinalPrice = 69.99m,
                            Name = "Star Wars Jedi: Survivor",
                            OriginalPrice = 69.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2023, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/VRaobDJjiec?si=cI9W2luLBw0Rea3r"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000018"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000002"),
                            Company = "Naughty Dog",
                            Description = "A gripping and emotional narrative-driven experience set in a post-apocalyptic world.",
                            Discount = 0m,
                            FinalPrice = 59.99m,
                            Name = "The Last of Us Part II",
                            OriginalPrice = 59.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2020, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/vhII1qlcZ4E?si=rVV7pNU9V7IwBc3t"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000019"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000005"),
                            Company = "id Software",
                            Description = "A high-speed, brutal shooter where you battle demons across multiple dimensions.",
                            Discount = 0m,
                            FinalPrice = 39.99m,
                            Name = "Doom Eternal",
                            OriginalPrice = 39.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/_UuktemkCFI?si=vpM4t0KZtLmComDO"
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000020"),
                            CategoryId = new Guid("c0000001-0000-0000-0000-000000000003"),
                            Company = "Capcom",
                            Description = "A co-op action RPG where you hunt massive monsters and craft powerful gear.",
                            Discount = 0m,
                            FinalPrice = 29.99m,
                            Name = "Monster Hunter: World",
                            OriginalPrice = 29.99m,
                            Rate = 0m,
                            ReleaseDate = new DateTime(2018, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://youtu.be/Ro6r15wzp2o?si=3qsaSwk1w21OEmmz"
                        });
                });

            modelBuilder.Entity("ServerSide.DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Wishlist", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerSide.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Cart", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerSide.DAL.Models.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Feedback", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerSide.DAL.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Library", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Product", "Product")
                        .WithMany("UserLibrary")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerSide.DAL.Models.User", "User")
                        .WithMany("UserLibrary")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Photo", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Product", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Wishlist", b =>
                {
                    b.HasOne("ServerSide.DAL.Models.Product", "Product")
                        .WithMany("UserWishlist")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerSide.DAL.Models.User", "User")
                        .WithMany("UserWishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Feedbacks");

                    b.Navigation("Photos");

                    b.Navigation("UserLibrary");

                    b.Navigation("UserWishlist");
                });

            modelBuilder.Entity("ServerSide.DAL.Models.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Feedbacks");

                    b.Navigation("UserLibrary");

                    b.Navigation("UserWishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
